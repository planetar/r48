
var mediLightingLevel = 0
var String[] modesArray = newArrayList("aus","zart","sanft","weich","wach","hell","level","pir")
var String curMode="pir"
var String bkpCurMode="pir"
var Number dusterLimit=25
var Boolean isDuster=false
var Boolean isEmpty=false


rule "triggered by system start medi"
when 
    System started
then
    pirLastTriggered_Medi.postUpdate( new DateTimeType() )
    PirState_Medi.postUpdate(OFF)
    pirActive_Medi_hueStrip.postUpdate(OFF)
    pirActive_Medi_Spot.postUpdate(OFF)
    pirActive_Medi_Stehlampe.postUpdate(ON)
   
    mediLightLevel.postUpdate(0)
    mediStrip.sendCommand(0)
    gMediSpot.sendCommand(0)
    mediStehLampe.sendCommand(0)

    mediLicht_pir.sendCommand(ON)
    logInfo("medi","init Medi  ")
end


    
rule "medi triggered minutely"

when
    Time cron "0 0/1 * * * ?"   // every minute
then
// isOfficeEmpty wird true, wenn pirLastTriggered_OfficeDesk - now > grenze ist und pirLastTriggered_OfficeTuer entsprechend
    // gerade.postUpdate(new DateTimeType())
    //var deskMoveMillis = (pirLastTriggered_OfficeDesk.state as DateTimeType).zonedDateTime.toInstant.toEpochMilli
    var tuerMoveMillis = (pirLastTriggered_Medi.state as DateTimeType).zonedDateTime.toInstant.toEpochMilli
    var nowMillis = (gerade.state as DateTimeType).zonedDateTime.toInstant.toEpochMilli
    //var deltaDesk = nowMillis - deskMoveMillis
    var deltaTuer = nowMillis - tuerMoveMillis
    if  (deltaTuer > 8*60*1000){ 
        isEmpty = true
    }
    else {
        {isEmpty = false}
    }

    // isSkEmpty
    if (sensor_lux_7.state < dusterLimit){isDuster=true} else {isDuster=false }
end



// pir
rule "rule triggered  by PirState_Medi received command"
when 	
    Item  PirState_Medi received command 
then
    logInfo("PirState_Medi", "PirState_Medi "+receivedCommand)

    if (receivedCommand==ON) {
        pirLastTriggered_Medi.postUpdate( new DateTimeType() )
    
        atMeditation.sendCommand("ON") 

        if (mediLicht_pir.state==ON){
            if (sensor_lux_7.state < dusterLimit){
                if (pirActive_Medi_hueStrip.state==ON){
                    mediStrip.sendCommand(mediStripColor_act.state.toString)
                }
                if (pirActive_Medi_Stehlampe.state==ON){
                    mediStehLampe.sendCommand(1)
                }
                if (pirActive_Medi_Spot.state==ON){
                    gMediSpot.sendCommand(1)
                }
            }
        }
        
    }

    else if (receivedCommand==OFF) {
        atMeditation.sendCommand(OFF)
        
        if (mediLicht_pir.state==ON){
            if (pirActive_Medi_hueStrip.state==ON){
                mediStrip.sendCommand(mediStripColor_pas.state.toString)
            }
            if (pirActive_Medi_Stehlampe.state==ON){
                mediStehLampe.sendCommand(0)
            }
            if (pirActive_Medi_Spot.state==ON){
                gMediSpot.sendCommand(0)
            }
        }
    }



end

////

/*
    minütlich aufgerufen, bestimmt ein lightLevel
*/

rule "rule triggered  by checkLight_Medi received command ON"
when 	
    Item  checkLight_Medi received command ON
then
    //logInfo("checkLight_Medi", "checkLight_Medi ON")
    		
    //var mll = mediLightLevel.state
    //if (PirState_Medi.state==OFF){return;}
    //if (mediLicht_auto.state==OFF) {return;}

    if (sensor_lux_7.state <10){ mediLightingLevel+= 1 }
    else if (sensor_lux_7.state > 30){ mediLightingLevel-= 1}

    if (mediLightingLevel<0){mediLightingLevel=0}
    if (mediLightingLevel>12){mediLightingLevel=12}

    mediLightLevel.sendCommand(mediLightingLevel)

end

/*
    Hier gibt es 3 alternative Ansätze zur Lichtsteuerung:
    - LichtModi: zart, weich, sanft, wach hell. Einmal gewählt bleiben die stabil und werden erst mit night abgeschaltet.
        Dies ist nervarm bei Nutzung mit einer Gruppe
    - LightLevel: 12 definierte Stufen, nach dem aktuellen Helligkeitswert wird das Level rauf oder runtergeregelt, bis eine stabile Lage gefunden ist.
    - pirAktiv: mediStrip wird nach coloring-states geschaltet, uU auch Stehlampe oder Spots.
        Dies ist ein energiesparender Normalzustand.
        pirAktiv wird mit night geschaltet, 
    
    item mediLichtArt hat Bewegung, Modi, Level zur Auswahl
*/


rule "rule triggered  by mediLightLevel changed"

when 	
    Item  mediLightLevel changed
then
 
    //var(actSteh) = pirActive_mediStehLampe.state==ON
    //logInfo("mediLightLevel", "mediLightLevel now "+level ")

    if (mediLicht_level.state==ON){
        var level = mediLightLevel.state

        // die doch vllt von pirActive lösen?
        var actSpot = pirActive_Medi_Spot.state==OFF
        var actSteh = pirActive_Medi_Stehlampe.state==OFF
        var actStrip= pirActive_Medi_hueStrip.state==OFF

        
        if (level==0)       {if (actSpot){gMediSpot.sendCommand(0)};   if (actSteh){mediStehLampe.sendCommand(0)};  if (actStrip){mediStripBright.sendCommand(0)};}
        else if (level==1)  {if (actSpot){gMediSpot.sendCommand(1)};   if (actSteh){mediStehLampe.sendCommand(0)};  if (actStrip){mediStripBright.sendCommand(3)};}
        else if (level==2)  {if (actSpot){gMediSpot.sendCommand(18)};  if (actSteh){mediStehLampe.sendCommand(0)};  if (actStrip){mediStripBright.sendCommand(8)};}
        else if (level==3)  {if (actSpot){gMediSpot.sendCommand(18)};  if (actSteh){mediStehLampe.sendCommand(1)};  if (actStrip){mediStripBright.sendCommand(10)};}
        else if (level==4)  {if (actSpot){gMediSpot.sendCommand(35)};  if (actSteh){mediStehLampe.sendCommand(1)};  if (actStrip){mediStripBright.sendCommand(16)};}
        else if (level==5)  {if (actSpot){gMediSpot.sendCommand(52)};  if (actSteh){mediStehLampe.sendCommand(1)};  if (actStrip){mediStripBright.sendCommand(24)};}
        else if (level==6)  {if (actSpot){gMediSpot.sendCommand(52)};  if (actSteh){mediStehLampe.sendCommand(18)}; if (actStrip){mediStripBright.sendCommand(32)};}
        else if (level==7)  {if (actSpot){gMediSpot.sendCommand(69)};  if (actSteh){mediStehLampe.sendCommand(18)}; if (actStrip){mediStripBright.sendCommand(40)};}
        else if (level==8)  {if (actSpot){gMediSpot.sendCommand(69)};  if (actSteh){mediStehLampe.sendCommand(35)}; if (actStrip){mediStripBright.sendCommand(48)};}
        else if (level==9)  {if (actSpot){gMediSpot.sendCommand(86)};  if (actSteh){mediStehLampe.sendCommand(18)}; if (actStrip){mediStripBright.sendCommand(56)};}
        else if (level==10) {if (actSpot){gMediSpot.sendCommand(86)};  if (actSteh){mediStehLampe.sendCommand(35)}; if (actStrip){mediStripBright.sendCommand(64)};}
        else if (level==11) {if (actSpot){gMediSpot.sendCommand(100)}; if (actSteh){mediStehLampe.sendCommand(35)}; if (actStrip){mediStripBright.sendCommand(72)};}
        else if (level==12) {if (actSpot){gMediSpot.sendCommand(100)}; if (actSteh){mediStehLampe.sendCommand(52)}; if (actStrip){mediStripBright.sendCommand(80)};}
        else if (level==13) {if (actSpot){gMediSpot.sendCommand(100)}; if (actSteh){mediStehLampe.sendCommand(67)}; if (actStrip){mediStripBright.sendCommand(88)};}
        else if (level==14) {if (actSpot){gMediSpot.sendCommand(100)}; if (actSteh){mediStehLampe.sendCommand(85)}; if (actStrip){mediStripBright.sendCommand(100)};}
        
    }
    
end

rule "rule triggered  by mediLicht_aus received command ON"

when 	
    Item  mediLicht_aus received command ON
then
    curMode="aus"
    for ( aState : modesArray) {
		if (aState!=curMode) {
			sendCommand("mediLicht_"+aState,"OFF")		
		}
	}
    
    mediStrip.sendCommand("35,99,0")
    gMediSpot.sendCommand(0)
    mediStehLampe.sendCommand(0)   
       
    
	
end

rule "rule triggered  by mediLicht_zart received command ON"

when 	
    Item  mediLicht_zart received command ON
then
    curMode="zart"
    for ( aState : modesArray) {
		if (aState!=curMode) {
			sendCommand("mediLicht_"+aState,"OFF")		
		}
	}
    
    mediStripBright.sendCommand(3)
    gMediSpot.sendCommand(0)
    mediStehLampe.sendCommand(0)   
    
	
end

rule "rule triggered  by mediLicht_sanft received command ON"

when 	
    Item  mediLicht_sanft received command ON
then
     curMode="sanft"
    for ( aState : modesArray) {
		if (aState!=curMode) {
			sendCommand("mediLicht_"+aState,"OFF")		
		}
	}
    
    mediStripBright.sendCommand(13)
    gMediSpot.sendCommand(0)
    mediStehLampe.sendCommand(0)   
       
    
	
end

rule "rule triggered  by mediLicht_weich received command ON"
when 	
    Item  mediLicht_weich received command ON
then
     curMode="weich"
    for ( aState : modesArray) {
		if (aState!=curMode) {
			sendCommand("mediLicht_"+aState,"OFF")		
		}
	}
   
    mediStripBright.sendCommand(23)
    gMediSpot.sendCommand(0)
    mediStehLampe.sendCommand(1)   
       
    
   
       
    
	
end

rule "rule triggered  by mediLicht_wach received command ON"

when 	
    Item  mediLicht_wach received command ON
then
    curMode="wach"
    for ( aState : modesArray) {
		if (aState!=curMode) {
			sendCommand("mediLicht_"+aState,"OFF")		
		}
	}
   
    mediStripBright.sendCommand(38)
    gMediSpot.sendCommand(1)
    mediStehLampe.sendCommand(1)   
       
    

	
end


rule "rule triggered  by mediLicht_hell received command ON"

when 	
    Item  mediLicht_hell received command ON
then
    curMode="hell"
    for ( aState : modesArray) {
		if (aState!=curMode) {
			sendCommand("mediLicht_"+aState,"OFF")		
		}
	}

   
    mediStripBright.sendCommand(63)
    gMediSpot.sendCommand(30)
    mediStehLampe.sendCommand(18)   
           
   
       
    
	
end

rule "rule triggered  by mediLicht_level received command ON"

when 	
    Item  mediLicht_level received command ON
then
    curMode="level"
    for ( aState : modesArray) {
		if (aState!=curMode) {
			sendCommand("mediLicht_"+aState,"OFF")		
		}
	}

    
   
       
    
	
end

rule "rule triggered  by mediLicht_pir received command ON"

when 	
    Item  mediLicht_pir received command ON
then
     curMode="pir"
    for ( aState : modesArray) {
		if (aState!=curMode) {
			sendCommand("mediLicht_"+aState,"OFF")		
		}
	}
    
    // Action!
       
    
	
end

// aus hue.rules
// mediSpot1

rule "triggered by mediSpot1 changed"
when 
    Item mediSpot1 changed
then
    //logInfo("mediSpot1", "mediSpot1 changed "+" trigger "+triggeringItem)
end



// medi
// sensor_lux_7
rule "sensor_lux_7 received command"
when 
    Item sensor_lux_7 received command
then
    //
end


// Luise
rule "rule triggered  by PirState_Medi received command ON"
when 	
    Item  PirState_Medi received command ON
then
    //var Number bright=0
    pirLastTriggered_Medi.postUpdate( new DateTimeType() ) 
    //logInfo("PirState_Medi", "PirState_Medi command ON "+" trigger "+triggeringItem)
    
    // no show at daytime
    if (isGloomy.state.toString=="OFF"){return;}

    if (pirActive_Medi_hueStrip.state.toString=="ON"){
        mediStrip.sendCommand(ON)
    }
    if (pirActive_Medi_Stehlampe.state.toString=="ON"){
        mediStehLampe.sendCommand(ON)
    }
    if (pirActive_Medi_Spot.state.toString=="ON"){
        mediSpot1.sendCommand(ON)
        mediSpot2.sendCommand(ON)
    }
         
    //}
end

rule "rule triggered  by PirState_Medi received command OFF"

when 	
    Item  PirState_Medi received command OFF
then
    
        
    //logInfo("PirState_Kueche2", "PirState_Kueche2 reset to 0")
    if (pirActive_Medi_hueStrip.state.toString=="ON"){
        mediStrip.sendCommand(OFF)
    }
    if (pirActive_Medi_Stehlampe.state.toString=="ON"){
        mediStehLampe.sendCommand(OFF)
    }
    if (pirActive_Medi_Spot.state.toString=="ON"){
        mediSpot1.sendCommand(OFF)
        mediSpot2.sendCommand(OFF)
    }
    
    
end


rule "triggered by cycleAction_Medi changed"
when 
    Item cycleAction_Medi changed
then
    logInfo("cycleAction_Medi", "cycleAction_Medi changed "+cycleAction_Medi.state.toString)
    var state=cycleAction_Medi.state.toString

    if (state=="late"){
        // pirActive für stehlampe aus
        // pirActive für mediMatrix an
        // led_mm.sendCommand('{"state":"ON","effect":"kuss","bright":6}')
    }
    if (state=="night"){
	// Luise
        mediStrip.sendCommand(0)
        mediStehLampe.sendCommand(0)
        mediSpot1.sendCommand(0)
        mediSpot2.sendCommand(0)
        led_mm.sendCommand('{"state":"OFF"}')
    }
    if (state=="morning"){
        led_mm.sendCommand('{"state":"ON","effect":"herz","bright":6}')
    }
end

// daAction_Medi
rule "rule triggered  by daAction_medi received command ON"
when 	
    Item  daAction_Medi received command ON
then
   //logInfo("medi","daAction_Medi changed to "+da_jmd.state+" curMode "+curMode)
   var String result
    if (da_jmd.state.toString=="OFF") {
        
        bkpCurMode=curMode
        //result = executeCommandLine("python /local/scripts/hashMap/hashMap.py set da,medi,curMode "+curMode,10000)
        mediLicht_aus.sendCommand(ON)
        led_mm.sendCommand('{"state":"OFF"}')

    } else if (da_jmd.state.toString=="ON") {
        
        //result = executeCommandLine("python /local/scripts/hashMap/hashMap.py get da,medi,curMode ",10000)
        sendCommand("mediLicht_"+bkpCurMode,"ON")
        led_mm.sendCommand('{"state":"ON","effect":"kuss","bright":8}')
    }
    logInfo("medi","daAction_Medi  "+da_jmd.state+" result "+result)
end

